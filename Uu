import requests

def get_direct_reports(standard_id, access_token):
    url = f'https://example.com/api/v1/orgChart?standardId={standard_id}'
    headers = {'cookie': f'ADFS_ACCESS_TOKEN={access_token}'}
    response = requests.get(url, headers=headers)
    data = response.json()
    direct_reports = data['allDirectReports']
   Continuing from the previous code snippet, here's the rest of the Python code to implement the remaining steps:

```python
    all_reports = []
    for report in direct_reports:
        if report['is_Manager'] == 1:
            sub_reports = get_direct_reports(report['standardId'], access_token)
            all_reports.extend(sub_reports)
        else:
            all_reports.append(report)
    return all_reports

# Example usage
access_token = 'askdhskjdhskjdhsjkdh'
standard_id = 'F123123'
direct_reports = get_direct_reports(standard_id, access_token)
report_ids = [report['standardId'] for report in direct_reports]
print(report_ids)
